<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (c) 2009, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)
         Point 1: (0, value[1]): lux <= 0
         Point 2: (level[1], value[2]): 0 < lux <= level[1]
         Point 3: (level[2], value[3]): level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]): level[N] < lux
         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).
         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item> <!-- pitch black -->
        <item>5</item> <!-- dark indoor -->
        <item>10</item> <!-- twilight -->
        <item>50</item> <!-- dim indoor -->
        <item>100</item> <!-- home -->
        <item>300</item> <!-- office -->
        <item>500</item> <!-- sunrise -->
        <item>1000</item> <!-- overcast -->
        <item>3000</item> <!-- indirect sun -->
        <item>10000</item> <!-- daylight -->
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>2</item>
        <item>10</item>
        <item>18</item>
        <item>29</item>
        <item>48</item>
        <item>74</item>
        <item>107</item>
        <item>152</item>
        <item>194</item>
        <item>254</item>
        <item>255</item>
    </integer-array>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">10</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">128</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>
    <!-- Fast brightness animation ramp rate in brightness units per second-->
    <integer translatable="false" name="config_brightness_ramp_rate_fast">180</integer>
    <!-- Slow brightness animation ramp rate in brightness units per second-->
    <integer translatable="false" name="config_brightness_ramp_rate_slow">60</integer>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>28</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>28</item>
        <item>8</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>28</item>
    </integer-array>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
        autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
         @see https://www.w3.org/TR/SVG/paths.html#PathData
    -->
    <string translatable="false" name="config_mainBuiltInDisplayCutoutRectApproximation">
        M 276.86,88
        H -276.87
        V 0
        H 276.86
        Z
    </string>

    <string translatable="false" name="config_mainBuiltInDisplayCutout">
        M-303,0
        L303,0
        C297.996921,0 293.7782,0.963094935 290.461489,2.86688725
        C287.195202,4.73708323 284.618028,7.69916009 282.998891,11.4451514
        C282.001636,13.7688979 281.301317,16.4846017 280.925946,19.5138712
        L279.710193,29.4583864
        C277.878158,44.3359633 273.46895,56.5314329 266.605824,65.7032324
        C259.63625,75.0150165 250.375232,81.2583355 238.301733,84.7859506
        C231.018416,86.9193179 222.676217,88 213.50484,88
        L-213.50484,88
        C-228.497268,88 -241.14783,85.1107152 -251.097961,79.4161364
        C-261.188157,73.6431662 -268.516295,65.2216849 -273.496963,53.6701451
        C-276.499931,46.704505 -278.589682,38.5573937 -279.710193,29.4583864
        L-280.925946,19.5138712
        C-281.542227,14.5584118 -283.010096,10.4932553 -285.301539,7.43038941
        C-287.553765,4.41791805 -290.81445,2.21735811 -294.730634,1.06948333
        C-297.156539,0.363960295 -299.941007,0 -303,0
        Z
    </string>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_enableSmartPixels">true</bool>

    <!-- Whether to show VoLTE icon in the status bar -->
    <bool name="config_display_volte">true</bool>
    
    <!-- Whether to show HD icon in the status bar for volte -->
    <bool name="config_display_hd_volte">true</bool>

    <!-- Whether device ignores the RSSNR signal implementation -->
    <bool name="config_ignoreRssnrSignalLevel">true</bool>


    <!-- Whether device has a notch -->
    <bool name="config_haveNotch">true</bool>

    <!-- Display has physical cutout -->
    <bool name="config_physicalDisplayCutout">true</bool>
    
    <!-- Whether we have a multi coloured battery LED or not -->
    <bool name="config_multiColorBatteryLed">false</bool>

    <!-- Whether device has screen with higher aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">true</bool>
    
    <!-- Flag indicating whether the surface flinger has limited
         alpha compositing functionality in hardware.  If set, the window
         manager will disable alpha trasformation in animations where not
         strictly needed. -->
    <bool name="config_sf_limitedAlpha">true</bool>

    <!-- Enables or disables fading edges when marquee is enabled in TextView.
         Off by default, since the framebuffer readback used to implement the
         fading edges is prohibitively expensive on most GPUs. -->
    <bool name="config_ui_enableFadingMarquee">true</bool>

    <!-- Amount of time in ms the user needs to press the relevant keys to trigger the
         screenshot chord -->
   <integer name="config_screenshotChordKeyTimeout">0</integer>

   <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Whether the display blanks itself when transitioning from a doze to a non-doze state -->
    <bool name="config_displayBlanksAfterDoze">true</bool>
   
</resources>
